name: RedstoneChips
main: org.tal.redstonechips.RedstoneChips
version: 0.91t3
author: eisental
description: Core RedstoneChips plugin for building integrated redstone circuits.
website: http://eisental.github.com/RedstoneChips
commands:
  redstonechips:
    description: General plugin information.
    usage: |
      `/redstonechips`
    aliases: [rc]
  rclist:
    description: Prints a list of active chips.
    usage: |
      `/rclist [world-name|all|this] [<filter-type>: <arg>,<arg>,<arg>;...]`

      The command without any arguments will list all circuits in the current world or, when used from the server console, circuits
      in all worlds.

      Use `/rclist all` as a player to see a list of all circuits on the server
      Use `/rclist <world-name>` to list all circuits in a specific world.

      To show only specific kind of circuits you can use a filter. There are several filter types.
      `location: <x>,<y>,<z>,[radius]` - Show only circuits in a radius around the location.
      `location: this, [radius]` - Uses your current location.
      `chunk: <x>,<z>` - Show only circuits in the specified chunk. `chunk: this` will use your current chunk
      `class: <class-name>` - Show only circuits of the specified class. You can use partial class names.
      You can combine different filters by separating them with a semicolon (;). You can also use partial filter type names.

      Examples:
        `/rclist this ch: this; cl: pix` - List every pixel circuit in your current world and chunk.
        `/rclist this loc: this, 10; class: decoder` - List every decoder in a 10 block radius around you.
  rcclasses:
    description: Prints a list of installed circuit classes.
    usage: |
      `/rcclasses`
  rcprefs:
    description: Allows to see and change the plugin's preferences.
    usage: |
      `/rcprefs [pref key] [new value]`

      Use the command with no arguments to list all preferences values.
      To change a preference value use `/rcprefs <pref key> <new value>`.
  rcdebug:
    aliases: [rcdb]
    description: Register yourself as a debugger of a chip and receive messages from it.
    usage: |
      `/rcdebug [io] [id|.|clear|list]`

      - Pointing at a chip and running the command will toggle debugging the chip.
      - To debug or stop debugging a remote chip use `/rcdebug <chip id>` if you have admin priviliges.
      - Pause debugging for all chips by running `/rcdebug`.
      - List all debugged chips by running `/rcdebug list`.
      - Clear your debug list by running `/rcdebug clear`.
      - To receive a debug message whenever a chip pin change state use `/rcdebug io [chip id]`.
      You can use `/rcdb` as a shortcut and type only part of the command for ex. `/rcdb l` is equivalent to `/rcdebug list`.
  rcpin:
    description: Prints information about a chip pin.
    usage: |
      Point towards an output lever or input redstone source to use.
      Prints the pin number (starting with 0), pin type (input/output), and current state (on/off) of the pin.
  rcactivate:
    description: Activates a circuit.
    usage: |
      Point the circuit sign and execute the command.
      To activate a circuit built with different input, output or interface block types then set in the preferences use /rcactivate <inputBlockType> <outputBlockType> <interfaceBlockType> .
  rcdestroy:
    description: Destroys a circuit and removes its blocks.
    usage: |
      Point at a block of the circuit you wish to destroy and enter the command.
      This command is disabled by default. To enable it use ;/rcprefs enableDestroyCommand true;.
  rcbreak:
    description: Deactivates a circuit without removing its blocks.
    usage: |
      `/rcbreak [circuit-id]`

      Point at a block of the circuit or enter the chip's id number as an argument if you have admin priviliges.
  rctype:
    description: General command for sending input to a chip.
    usage: |
      `/rctype [...]`

      Use by pointing at a block and executing the command. Each circuit class uses it differently.
      Check the relevant chip documentation for more information about usage.
  rcreset:
    description: Rescans and reactivates a circuit.
    usage: |
      `/rcreset [circuit-id|all]`

      Use by pointing towards the circuit or by using the chip's id number as an argument if you have op priviliges.
      Reset a circuit to scan for new i/o blocks or sign arguments and apply any changes.

      Running `/rcreset all` will reset all active circuits. Use with caution!
  rcchannels:
    aliases: [rcch]
    description: Prints a list of all wireless broadcast channels.
    usage: |
      `/rcchannels [channel-name]`
      
      Use a channel name as an argument to print info about that channel.
  rcinfo:
    description: Prints a lot of useful information about a chip.
    usage: |
      `/rcinfo [circuit-id]`

      Use by pointing at a block of the chip you want to get info about or use the chip's id number as an argument.
  rcfixioblocks:
    description: Replace i/o blocks using incorrect materials.
    usage: |
      `/rcfixioblocks [circuit-id]`

      Use by pointing at the circuit you want to fix or, if you have op priviliges, use a circuit id as an argument.
      Any i/o blocks using a different block type than set in the plugin's preferences are replaced to the correct material.
  rcsel:
    description: Mass editing circuits within a selection cuboid.
    usage: |
      To define a selection type /rcsel and right-click on two opposite corners of your cuboid.
      When no selection is defined /rcsel will try to use WorldEdit's current selection.       

      When either types of selection are defined you can execute any of the following commands.

      `/rcsel activate [<input type> <output type> <interface block type>]`, `/rcsel fixioblocks`,
      `/rcsel break`, `/rcsel destroy`, `/rcsel reset` - These work the same as their single circuit counterparts.

      `/rcsel list` - Lists all circuits in the selection

      `/rcsel clear` - Clears the current selection.
  rcarg:
    description: Replace, add or clear circuit sign arguments.
    usage: |
      `/rcarg <arg-number|add|clear> <arg-value>...<arg-number|add|clear> <arg-value>`

      Use by pointing at the circuit you want to edit and execute the command.
      To change an existing argument value use `/rcarg <arg-number> <arg-value>`, where arg-number is the
      sign argument number, starting to count with 1 and arg-value is the new value for this argument.

      To add an argument as the last argument use `/rcarg add <arg-value>`.
      To remove an argument use `/rcarg clear <arg-number>`.

      You can make changes to more than 1 argument by typing additional command arguments, for ex. `/rcarg 1 val clear 2`
      will set the 1st argument to val and remove the 2nd argument.
  rcsave:
    description: Saves all circuit data to file.
    usage: |
      Makes sure all circuits are intact and saves their current state to the plugin's circuits file.
      Should not be used unless there's a problem with the automatic data save.
  rcload:
    description: Reloads circuit data from file.
    usage: |
      This will reset any changes made to the circuits state since the last save occured.
  rchelp:
    description: Prints a list or description of all RC commands.
    usage: |
      Use `/rchelp <command name>` to get help about a specific command.
  rcp:
    description: Moves to a different page when run after using a command with paging.
    usage: |
      `/rcp [page #|prev|next|last]`
      Running the command without arguments will cause it to move to the next page or go back to the first if the last page was reached.
  rcprotect:
    description: Creates, removes, and configures protected wireless channels. 
    usage: |
      `/rcprotect [channel|listchannels] [protect|unprotect|add|remove] [users:names] [admins:names]`

      Use the command with `listchannels` to list all protected channels.
      Use the command with only a channel name to list users and admins of that channel.
      Use the command with a channel name and `protect` to protect a channel, you will automatically be added as an admin of the channel. You may also pass a list of users and/or admins.
      Use the command with a channel name and `unprotect` to remove protection for a channel.
      Use the command with a channel name and `add` or `remove` to add or remove admins and users of a channel. These commands require that you pass a list of users and/or admins.
      Users and admins should be passed in the form of `users:User1,User2,User3` and `admins:Admin1,Admin2,Admin3`.
permissions:
  redstonechips.admin:
    description: Grants access to all of RedstoneChips including admin commands.
    children:
      redstonechips.command.admin: true
      redstonechips.circuit.*: true
      redstonechips.channel.admin: true
  redstonechips.*:
    description: Grants access to all of RedstoneChips excluding admin commands.
    children:
      redstonechips.command.*: true
      redstonechips.circuit.*: true
  redstonechips.deny:
    description: Denys access to all of RedstoneChips.
    children:
      redstonechips.command.deny: true
      redstonechips.circuit.deny: true
  redstonechips.command.*:
    description: Grants access to all of RedstoneChips commands excluding admin commands.
    children:
      redstonechips.command.redstonechips: true
      redstonechips.command.rclist: true
      redstonechips.command.rcclasses: true
      redstonechips.command.rcprefs: true
      redstonechips.command.rcdebug: true
      redstonechips.command.rcpin: true
      redstonechips.command.rcactivate: true
      redstonechips.command.rcbreak: true
      redstonechips.command.rctype: true
      redstonechips.command.rcreset: true
      redstonechips.command.rcchannels: true
      redstonechips.command.rcinfo: true
      redstonechips.command.rcfixioblocks: true
      redstonechips.command.rcsel: true
      redstonechips.command.rcarg: true
      redstonechips.command.rchelp: true
      redstonechips.command.rcprotect: true
  redstonechips.command.admin:
    description: Grants access to all of RedstoneChips commands including admin commands.
    children:
      redstonechips.command.*: true
      redstonechips.command.rcload: true
      redstonechips.command.rcsave: true
      redstonechips.command.rcdestroy: true
      redstonechips.command.rcprefs.set: true
      redstonechips.command.rcreset.all: true
      redstonechips.command.break.id: true
      redstonechips.command.fixioblocks.id: true
  redstonechips.command.deny:
    description: Deny all commands.
    children:
      redstonechips.command.redstonechips.deny: true
      redstonechips.command.rclist.deny: true
      redstonechips.command.rcclasses.deny: true
      redstonechips.command.rcprefs.deny: true
      redstonechips.command.rcprefs.set.deny: true
      redstonechips.command.rcdebug.deny: true
      redstonechips.command.rcpin.deny: true
      redstonechips.command.rcactivate.deny: true
      redstonechips.command.rcbreak.deny: true
      redstonechips.command.rctype.deny: true
      redstonechips.command.rcreset.deny: true
      redstonechips.command.rcreset.all.deny: true
      redstonechips.command.rcchannels.deny: true
      redstonechips.command.rcinfo.deny: true
      redstonechips.command.rcfixioblocks.deny: true
      redstonechips.command.rcsel.deny: true
      redstonechips.command.rcarg.deny: true
      redstonechips.command.rchelp.deny: true
      redstonechips.command.rcload.deny: true
      redstonechips.command.rcsave.deny: true
      redstonechips.command.rcdestroy.deny: true
      redstonechips.command.rcprotect.deny: true
      redstonechips.command.break.id.deny: true
      redstonechips.command.fixioblocks.id.deny: true
      redstonechips.command.rcreset.all.deny: true
  redstonechips.circuit.*:
    description: Grants access to create and destroy all RedstoneChips circuits.
    children:
      redstonechips.circuit.destroy.*: true
      redstonechips.circuit.create.*: true
  redstonechips.circuit.deny:
    description: Deny all circuits.
    children:
      redstonechips.circuit.destroy.deny: true
      redstonechips.circuit.create.deny: true
  redstonechips.command.redstonechips:
    description: Grants the redstonechips command.
  redstonechips.command.redstonechips.deny:
    description: Denies the redstonechips command.
  redstonechips.command.rclist:
    description: Grants the rclist command.
  redstonechips.command.rclist.deny:
    description: Denies the rclist command.
  redstonechips.command.rcclasses:
    description: Grants the rcclasses command.
  redstonechips.command.rcclasses.deny:
    description: Denies the rcclasses command.
  redstonechips.command.rcprefs:
    description: Grants the rcprefs command.
  redstonechips.command.rcprefs.set:
    description: Grants using the rcprefs command to set preferences.
  redstonechips.command.rcprefs.deny:
    description: Denies the rcprefs command.
  redstonechips.command.rcprefs.set.deny:
    description: Denies using the rcprefs command to set preferences.
  redstonechips.command.rcdebug:
    description: Grants the rcdebug command.
  redstonechips.command.rcdebug.deny:
    description: Denies the rcdebug command.
  redstonechips.command.rcpin:
    description: Grants the rcpin command.
  redstonechips.command.rcpin.deny:
    description: Denies the rcpin command.
  redstonechips.command.rcactivate:
    description: Grants the rcactivate command.
  redstonechips.command.rcactivate.deny:
    description: Denies the rcactivate command.
  redstonechips.command.rcdestroy:
    description: Grants the rcdestroy command.
  redstonechips.command.rcdestroy.deny:
    description: Denies the rcdestroy command.
  redstonechips.command.rcbreak:
    description: Grants the rcbreak command.
  redstonechips.command.rcbreak.id:
    description: Grants the rcbreak command with a circuit id.
  redstonechips.command.rcbreak.deny:
    description: Denies the rcbreak command.
  redstonechips.command.rcbreak.id.deny:
    description: Denies the rcbreak command with a circuit id.
  redstonechips.command.rctype:
    description: Grants the rctype command.
  redstonechips.command.rctype.deny:
    description: Denies the rctype command.
  redstonechips.command.rcreset:
    description: Grants the rcreset command.
  redstonechips.command.rcreset.all:
    description: Grants the rcreset all command.
  redstonechips.command.rcreset.deny:
    description: Denies the rcreset command.
  redstonechips.command.rcreset.all.deny:
    description: Denies the rcreset all command
  redstonechips.command.rcchannels:
    description: Grants the rcchannels command.
  redstonechips.command.rcchannels.deny:
    description: Denies the rcchannels command.
  redstonechips.command.rcinfo:
    description: Grants the rcinfo command.
  redstonechips.command.rcinfo.deny:
    description: Denies the rcinfo command.
  redstonechips.command.rcfixioblocks:
    description: Grants the rcfixioblocks command.
  redstonechips.command.rcfixioblocks.id:
    description: Grants the rcfixioblocks command with a circuit id.
  redstonechips.command.rcfixioblocks.deny:
    description: Denies the rcfixioblocks command.
  redstonechips.command.rcfixioblocks.id.deny:
    description: Denies the rcfixioblocks command with a circuit id.
  redstonechips.command.rcsel:
    description: Grants the rcsel command.
  redstonechips.command.rcsel.deny:
    description: Denies the rcsel command.
  redstonechips.command.rcarg:
    description: Grants the rcarg command.
  redstonechips.command.rcarg.deny:
    description: Denies the rcarg command.
  redstonechips.command.rcsave:
    description: Grants the rcsave command.
  redstonechips.command.rcsave.deny:
    description: Denies the rcsave command.
  redstonechips.command.rcload:
    description: Grants the rcload command.
  redstonechips.command.rcload.deny:
    description: Denies the rcload command.
  redstonechips.command.rchelp:
    description: Grants the rchelp command.
  redstonechips.command.rchelp.deny:
    description: Denies the rchelp command.
  redstonechips.circuit.destroy.*:
    description: Grants permission to destroy all circuits.
  redstonechips.circuit.create.*:
    description: Grants permission to create all circuits.
  redstonechips.circuit.destroy.deny:
    description: Denies permission to destroy all circuits. 
  redstonechips.circuit.create.deny:
    description: Denies  permission to create all circuits.
  redstonechips.channel.admin:
    description: Grants admin rights to all channels.